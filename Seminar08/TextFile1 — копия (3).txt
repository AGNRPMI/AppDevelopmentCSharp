# объектно-ориентированное программирование
Все объектно-ориентированные языки (С#, Java, C++, Visual Basic и т.д.) должны поддерживать три основных принципа ООП:
* Инкапсуляция. Каким образом язык скрывает детали внутренней реализации объектов и предохраняет целостность данных?
* Наследование. Каким образом язык стимулирует многократное использование кода?
* Полиморфизм. Каким образом язык позволяет трактовать связанные объекты в сходной манере?


## инкапсуляция


### общее
Такая характерная черта описывает способность языка скрывать излишние детали реализации от пользователя объекта. 
смысл заключается в том чтобы не нагружать стороннего программиста лишней информацией - если заявляется что метод Console.WriteLine() выводит строку  в консоль, то похуй как этот метод работает
```csharp
// Например, предположим, что вы имеете дело с классом по имени DatabaseReader, в котором определены два главных метода: Open() и Close() .
// Пусть этот класс инкапсулирует детали открытия и закрытия базы данных.
DatabaseReader dbReader = new DatabaseReader();
dbReader.Open(@"C:\AutoLot.mdf");
// Сделать что-то с файлом данных и закрыть файл.
dbReader.Close();
```